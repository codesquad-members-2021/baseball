{"version":3,"sources":["components/shared/Title.jsx","components/main/Message.jsx","utils/util.js","components/main/Teams.jsx","components/main/Main.jsx","components/game/baseballField/CurrentInningInfo.jsx","utils/pitchActions/ball.js","utils/pitchActions/hit.js","utils/pitchActions/out.js","utils/pitchActions/strike.js","components/game/baseballField/Diamond.jsx","components/game/baseballField/SBO.jsx","components/game/CurrentPlayer.jsx","components/game/DetailScorePopup.jsx","components/game/PlayerHistory.jsx","components/game/PlayerListPopup.jsx","components/game/TeamScore.jsx","components/game/Game.jsx","utils/reducer.js","App.jsx","index.js"],"names":["Title","Message","actionType","strike","ball","hit","pitchResult","currS","currO","currB","deepCopy","arg","JSON","parse","stringify","getURL","param","dispatchAll","stateArray","dispatch","forEach","state","requestPost","path","bodyObject","a","console","log","fetch","method","headers","body","response","json","gameData","localStorage","setItem","matchId","expeditionTeam","homeTeam","inning","cycle","type","team","optionalState","role","pitcher","name","pitchCount","hitter","playerBattingOrder","nextHitter","teamId","historyList","plateAppearances","hits","lastAction","currInning","currTeamLog","teamLog","playerLog","Teams","teamSet","useContext","GlobalContext","setTeams","teamName","idx","counterTeamId","id","counterTeamName","isHome","myTeamId","myTeam","counterTeam","map","i","to","onClick","Main","useState","teamList","setTeamList","useEffect","then","res","matchedTeamList","result","match","length","parseInt","Math","random","push","splice","setMatches","TeamMatchContainer","styled","div","CurrentInningInfo","InningInfoBox","inningNumber","isFourBall","diamondQueue","currAttackTeam","currSBO","currHitter","copiedPreStateOfHitter","init","payload","concat","actionName","out","alert","fns","fn","isThreeOut","isThreeStrike","Diamond","props","globalState","currH","actionBoard","S","B","O","H","resetSB","requestNextHitter","currHitterLastAction","getItem","totalTeamScore","totalScore","newDiamondQueue","shift","playerName","DiamondField","currPitcher","actions","copyPreStateOfPitcher","SBO","SBOItem","SBOKind","SBOCount","Array","from","li","CurrentPlayer","playerRole","DetailScorePopup","popupState","team2","arr","fill","teamGameScore","obj","score","expedition","home","ScorePopup","ScoreTable","e","InningNumber","border","Score","color","weight","align","PlayerHistory","flag","history","PlayerHistoryContainer","CurrPlayer","PlayerLog","historyLog","PastPlayers","ul","PlayerListPopup","TeamScore","isMyTeam","TeamScoreContainer","Game","isResponseDone","setPopupState","handleMouseEnterOnPopup","isTop","target","urlName","translateValue","popupData","style","transform","background","GameContainer","GameProgress","MainScoreBoard","ScoreBox","BaseballField","PlayerProgress","CurrentPlayerContainer","reverse","TopPopupArea","onMouseEnter","BottomPopupArea","section","initialValue","reducer","action","React","createContext","App","useReducer","baseballState","teamInfo","Provider","value","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.166dbeef.chunk.js","sourcesContent":["const Title = () => {\r\n  return <h1>BASEBALL GAME ONLINE</h1>;\r\n};\r\n\r\nexport default Title;\r\n","const Message = () => {\r\n  return <h3>참가할 게임을 선택하세요!</h3>;\r\n};\r\n\r\nexport default Message;\r\n","const actionType = {\r\n  strike: \"스트라이크\",\r\n  ball: \"볼\",\r\n  hit: \"안타\",\r\n};\r\n\r\nconst pitchResult = {\r\n  isThreeStrike: (currS) => currS >= 2,\r\n  isThreeOut: (currO) => currO >= 2,\r\n  isFourBall: (currB) => currB >= 3,\r\n};\r\n\r\nconst deepCopy = (arg) => JSON.parse(JSON.stringify(arg));\r\n\r\nconst getURL = (param) => `http://52.78.64.148/api/game/${param}`;\r\n\r\nconst isEqual = (team1, team2) => team1.name === team2.name;\r\n\r\nconst scoreParser = (scoreData) => {\r\n  return scoreData.map((team) => {\r\n    let arr = Array(15).fill(\"\");\r\n    let totalScore = 0;\r\n    team.teamGameScore.forEach((obj, i) => {\r\n      arr[i + 2] = obj.score;\r\n      totalScore += obj.score;\r\n    });\r\n    arr[1] = team.teamName;\r\n    arr[arr.length - 1] = totalScore;\r\n    return arr;\r\n  });\r\n};\r\n\r\nconst dispatchAll = (stateArray, dispatch) => {\r\n  stateArray.forEach((state) => dispatch(state));\r\n};\r\n\r\nconst requestPost = async (path, bodyObject, dispatch, ...optionalState) => {\r\n  console.log(bodyObject);\r\n  const response = await fetch(path, {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json;charset=utf-8\",\r\n    },\r\n    body: JSON.stringify(bodyObject),\r\n  });\r\n  const gameData = await response.json();\r\n  localStorage.setItem(\"matchId\", gameData.matchId);\r\n\r\n  const { expeditionTeam, homeTeam } = gameData;\r\n  console.log(expeditionTeam);\r\n  if (gameData.inning.cycle === \"초\") dispatch({ type: \"currAttackTeam\", team: deepCopy(expeditionTeam) });\r\n  if (gameData.inning.cycle === \"말\") dispatch({ type: \"currAttackTeam\", team: deepCopy(homeTeam) });\r\n\r\n  const stateArray = [\r\n    ...optionalState,\r\n    { type: \"homeTeam\", team: deepCopy(homeTeam) },\r\n    { type: \"expeditionTeam\", team: deepCopy(expeditionTeam) },\r\n    {\r\n      type: \"currPitcher\",\r\n      role: gameData.pitcher.role,\r\n      name: gameData.pitcher.name,\r\n      pitchCount: gameData.pitcher.pitchCount,\r\n    },\r\n    {\r\n      type: \"currHitter\",\r\n      role: gameData.hitter.role,\r\n      playerBattingOrder: gameData.nextHitter.playerBattingOrder,\r\n      teamId: gameData.nextHitter.teamId,\r\n      historyList: deepCopy(gameData.nextHitter.historyList),\r\n      name: gameData.hitter.name,\r\n      plateAppearances: gameData.hitter.plateAppearances,\r\n      hits: gameData.hitter.hits,\r\n      lastAction: null,\r\n    },\r\n    {\r\n      type: \"currInning\",\r\n      currInning: deepCopy(gameData.inning),\r\n    },\r\n    {\r\n      type: \"currTeamLog\",\r\n      currTeamLog: deepCopy(gameData.teamLog.playerLog),\r\n    },\r\n    { type: \"isResponseDone\" },\r\n  ];\r\n  dispatchAll(stateArray, dispatch);\r\n};\r\n\r\nexport { actionType, deepCopy, getURL, isEqual, scoreParser, requestPost, pitchResult };\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../App\";\r\nimport { getURL, deepCopy, requestPost } from \"../../utils/util\";\r\n\r\nconst Teams = ({ teamSet }) => {\r\n  const { dispatch } = useContext(GlobalContext);\r\n\r\n  const setTeams = async (teamName, teamId, idx) => {\r\n    const counterTeamId = idx ? teamSet[0].id : teamSet[1].id;\r\n    const counterTeamName = teamSet[idx ? 0 : 1].name;\r\n    const isHome = idx === 1;\r\n\r\n    requestPost(\r\n      getURL(\"/\"),\r\n      {\r\n        myTeamId: teamId,\r\n        counterTeamId: counterTeamId,\r\n        isHome: isHome,\r\n      },\r\n      dispatch,\r\n      { type: \"myTeam\", id: teamId, name: teamName },\r\n      { type: \"counterTeam\", id: counterTeamId, name: counterTeamName }\r\n    );\r\n\r\n    localStorage.setItem(\"selectedTeams\", JSON.stringify({ myTeam: teamId, counterTeam: counterTeamId }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {teamSet.map((team, i) => (\r\n        <Link to=\"/baseballGame\" onClick={() => setTeams(team.name, team.id, i)}>\r\n          {team.name}\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teams;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Title from \"../shared/Title\";\r\nimport Message from \"./Message\";\r\nimport Teams from \"./Teams\";\r\nimport { getURL } from \"../../utils/util\";\r\n\r\nconst setMatches = (teamList) => {\r\n  const result = [];\r\n  let match = [];\r\n  while (teamList.length) {\r\n    if (match.length < 2) {\r\n      const i = parseInt(Math.random() * teamList.length);\r\n      match.push(teamList[i]);\r\n      teamList.splice(i, 1);\r\n    }\r\n    if (match.length >= 2) {\r\n      result.push(match);\r\n      match = [];\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nconst Main = () => {\r\n  const [teamList, setTeamList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(getURL(\"/teams\"))\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        const matchedTeamList = setMatches(json);\r\n        setTeamList(matchedTeamList);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Title />\r\n      <Message />\r\n      <TeamMatchContainer>\r\n        {teamList.length > 0 &&\r\n          [...teamList].map((teamSet) => {\r\n            return <Teams teamSet={teamSet} />;\r\n          })}\r\n      </TeamMatchContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst TeamMatchContainer = styled.div`\r\n  border: 1px solid red;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst CurrentInningInfo = ({ inning }) => {\r\n  return (\r\n    <InningInfoBox>\r\n      <p>{`${inning.inningNumber}회${inning.cycle} ${inning.role}`}</p>\r\n    </InningInfoBox>\r\n  );\r\n};\r\n\r\nexport default CurrentInningInfo;\r\n\r\nconst InningInfoBox = styled.div`\r\n  width: 150px;\r\n  text-align: center;\r\n`;\r\n","import { pitchResult } from \"../util\";\r\nconst { isFourBall } = pitchResult;\r\n\r\nconst ball = (diamondQueue, currAttackTeam, currSBO, currHitter, dispatch, ...fns) => {\r\n  const { currS, currB, currO } = currSBO;\r\n\r\n  dispatch({ type: \"currB\", init: false, payload: 1 });\r\n\r\n  let copiedPreStateOfHitter;\r\n\r\n  if (!isFourBall(currB)) {\r\n    copiedPreStateOfHitter = {\r\n      ...currHitter,\r\n      historyList: currHitter.historyList.concat({\r\n        id: currHitter.historyList.length + 1,\r\n        actionName: \"ball\",\r\n        strike: currS,\r\n        ball: currB + 1,\r\n        out: currO,\r\n      }),\r\n    };\r\n\r\n    dispatch({\r\n      type: \"currHitter\",\r\n      ...copiedPreStateOfHitter,\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  alert(\"볼넷임다~\");\r\n  copiedPreStateOfHitter = {\r\n    ...currHitter,\r\n    plateAppearances: currHitter.plateAppearances + 1,\r\n    lastAction: \"볼넷\",\r\n    historyList: currHitter.historyList.concat({\r\n      id: currHitter.historyList.length + 1,\r\n      actionName: \"ball\",\r\n      strike: currS,\r\n      ball: currB + 1,\r\n      out: currO,\r\n    }),\r\n  };\r\n\r\n  dispatch({\r\n    type: \"currHitter\",\r\n    ...copiedPreStateOfHitter,\r\n  });\r\n\r\n  // const newDiamondQueue = [...diamondQueue, currHitter];\r\n  // if (newDiamondQueue.length > 3) {\r\n  //   newDiamondQueue.shift();\r\n  //   dispatch({\r\n  //     type: \"currAttackTeam\",\r\n  //     team: { ...currAttackTeam, totalScore: currAttackTeam.totalScore + 1 },\r\n  //   });\r\n  // }\r\n\r\n  // dispatch({\r\n  //   type: \"diamondQueue\",\r\n  //   diamondQueue: newDiamondQueue,\r\n  // });\r\n\r\n  fns.forEach((fn) => fn());\r\n};\r\nexport default ball;\r\n","const hit = (diamondQueue, currAttackTeam, currSBO, currHitter, dispatch, ...fns) => {\r\n  const { currS, currB, currO } = currSBO;\r\n  dispatch({ type: \"currH\", init: false, payload: 1 });\r\n\r\n  const copiedPreStateOfHitter = {\r\n    ...currHitter,\r\n    plateAppearances: currHitter.plateAppearances,\r\n    hits: currHitter.hits + 1,\r\n    lastAction: \"안타\",\r\n    historyList: currHitter.historyList.concat({\r\n      id: currHitter.historyList.length + 1,\r\n      actionName: \"hit\",\r\n      strike: currS,\r\n      ball: currB,\r\n      out: currO,\r\n    }),\r\n  };\r\n\r\n  dispatch({\r\n    type: \"currHitter\",\r\n    ...copiedPreStateOfHitter,\r\n  });\r\n  // const newDiamondQueue = [...diamondQueue, currHitter];\r\n  // if (newDiamondQueue.length > 3) {\r\n  //   newDiamondQueue.shift();\r\n  //   dispatch({\r\n  //     type: \"currAttackTeam\",\r\n  //     team: { ...currAttackTeam, totalScore: currAttackTeam.totalScore + 1 },\r\n  //   });\r\n  // }\r\n  // dispatch({\r\n  //   type: \"diamondQueue\",\r\n  //   diamondQueue: newDiamondQueue,\r\n  // });\r\n\r\n  fns.forEach((fn) => fn());\r\n};\r\n\r\nexport default hit;\r\n","import { pitchResult } from \"../util\";\r\nconst { isThreeOut } = pitchResult;\r\n\r\nconst out = (currSBO, currHitter, dispatch, ...fns) => {\r\n  const { currS, currB, currO } = currSBO;\r\n  dispatch({ type: \"currO\", init: false, payload: 1 });\r\n  const copiedPreStateOfHitter = {\r\n    ...currHitter,\r\n    plateAppearances: currHitter.plateAppearances + 1,\r\n    lastAction: \"아웃\",\r\n    historyList: currHitter.historyList.concat({\r\n      id: currHitter.historyList.length + 1,\r\n      actionName: \"out\",\r\n      strike: currS + 1,\r\n      ball: currB,\r\n      out: currO + 1, // db에 보내기 위한 용도로만 해줄 거니까 굳이 상태를 갱신해서 리렌더할 필요가 없음\r\n    }),\r\n  };\r\n\r\n  dispatch({\r\n    type: \"currHitter\",\r\n    ...copiedPreStateOfHitter,\r\n  });\r\n\r\n  if (isThreeOut(currO)) {\r\n    alert(\"팀 교체함다~\");\r\n    dispatch({ type: \"currO\", init: true });\r\n    // 팀 교체 요청 보내기\r\n  }\r\n  fns.forEach((fn) => fn());\r\n};\r\n\r\nexport default out;\r\n","import { pitchResult } from \"../util\";\r\nimport out from \"./out\";\r\n\r\nconst { isThreeStrike } = pitchResult;\r\n\r\nconst strike = (currSBO, currHitter, dispatch, ...fns) => {\r\n  const { currS, currB, currO } = currSBO;\r\n  if (isThreeStrike(currS)) {\r\n    out(currSBO, currHitter, dispatch, ...fns);\r\n    return;\r\n  }\r\n  dispatch({ type: \"currS\", init: false, payload: 1 });\r\n\r\n  const copiedPreStateOfHitter = {\r\n    ...currHitter,\r\n    historyList: currHitter.historyList.concat({\r\n      id: currHitter.historyList.length + 1,\r\n      actionName: \"strike\",\r\n      strike: currS + 1,\r\n      ball: currB,\r\n      out: currO,\r\n    }),\r\n  };\r\n\r\n  dispatch({\r\n    type: \"currHitter\",\r\n    ...copiedPreStateOfHitter,\r\n  });\r\n};\r\n\r\nexport default strike;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../App\";\r\nimport ball from \"../../../utils/pitchActions/ball\";\r\nimport hit from \"../../../utils/pitchActions/hit\";\r\nimport strike from \"../../../utils/pitchActions/strike\";\r\nimport { getURL, requestPost } from \"../../../utils/util\";\r\n\r\nconst Diamond = (props) => {\r\n  const { globalState, dispatch } = useContext(GlobalContext);\r\n  const { currHitter, currS, currB, currO, currH, expeditionTeam, homeTeam, currAttackTeam, diamondQueue } =\r\n    globalState;\r\n\r\n  useEffect(() => {\r\n    const actionBoard = { currHitter, S: currS, B: currB, O: currO, H: currH };\r\n    localStorage.setItem(\"currHitter\", JSON.stringify(actionBoard));\r\n  }, [currS, currB, currH, currO]);\r\n\r\n  const resetSB = () => {\r\n    dispatch({ type: \"currS\", init: true });\r\n    dispatch({ type: \"currB\", init: true });\r\n  };\r\n\r\n  const requestNextHitter = (currHitterLastAction) => {\r\n    const matchId = localStorage.getItem(\"matchId\");\r\n    let totalTeamScore = currAttackTeam.totalScore;\r\n    const newDiamondQueue = [...diamondQueue];\r\n\r\n    if (currHitterLastAction === \"안타\" || currHitterLastAction === \"볼넷\") {\r\n      newDiamondQueue.push(currHitter);\r\n      if (newDiamondQueue.length > 3) {\r\n        newDiamondQueue.shift();\r\n        totalTeamScore++;\r\n        dispatch({\r\n          type: \"currAttackTeam\",\r\n          team: { ...currAttackTeam, totalScore: currAttackTeam.totalScore + 1 },\r\n        });\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: \"diamondQueue\",\r\n      diamondQueue: newDiamondQueue,\r\n    });\r\n\r\n    requestPost(\r\n      getURL(`/${matchId}/exchange`),\r\n      {\r\n        playerBattingOrder: currHitter.playerBattingOrder,\r\n        teamId: currHitter.teamId,\r\n        playerName: currHitter.name,\r\n        historyList: currHitter.historyList,\r\n        lastAction: currHitterLastAction,\r\n        totalTeamScore: totalTeamScore,\r\n      },\r\n      dispatch\r\n    );\r\n  };\r\n\r\n  const handlePitch = () => {\r\n    const { currPitcher } = globalState;\r\n    const actions = [\"strike\", \"strike\", \"strike\"];\r\n    const selectedIndex = parseInt(Math.random() * actions.length);\r\n    const pitchResult = actions[selectedIndex];\r\n    alert(`결과: ${pitchResult}`); // 일단!!!\r\n\r\n    const copyPreStateOfPitcher = { ...currPitcher };\r\n    copyPreStateOfPitcher.pitchCount++;\r\n    dispatch({ type: \"currPitcher\", ...copyPreStateOfPitcher });\r\n\r\n    if (pitchResult === \"strike\") {\r\n      strike({ currS, currB, currO }, currHitter, dispatch, resetSB, () => requestNextHitter(\"아웃\"));\r\n      return;\r\n    }\r\n    if (pitchResult === \"ball\") {\r\n      ball(diamondQueue, currAttackTeam, { currS, currO, currB }, currHitter, dispatch, resetSB, () =>\r\n        requestNextHitter(\"볼넷\")\r\n      );\r\n      return;\r\n    }\r\n    if (pitchResult === \"hit\") {\r\n      alert(\"선수 교체함다~\");\r\n      hit(diamondQueue, currAttackTeam, { currS, currB, currO }, currHitter, dispatch, resetSB, () =>\r\n        requestNextHitter(\"안타\")\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DiamondField>\r\n      <div>다이아몬드 경기장을 넣을 거임</div>\r\n      {/* <PitchButton /> */}\r\n      <button onClick={handlePitch}>pitch</button>\r\n    </DiamondField>\r\n  );\r\n};\r\n\r\nexport default Diamond;\r\n\r\nconst DiamondField = styled.div`\r\n  width: 100%;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../App\";\r\n\r\nconst SBO = (props) => {\r\n  const { globalState } = useContext(GlobalContext);\r\n  const { currS, currB, currO } = globalState;\r\n\r\n  return (\r\n    <ul>\r\n      <SBOItem>\r\n        <SBOKind>S</SBOKind>\r\n        <SBOCount>{Array.from({ length: currS }).map(() => \"🟡\")}</SBOCount>\r\n      </SBOItem>\r\n      <SBOItem>\r\n        <SBOKind>B</SBOKind>\r\n        <SBOCount>{Array.from({ length: currB }).map(() => \"🟢\")}</SBOCount>\r\n      </SBOItem>\r\n      <SBOItem>\r\n        <SBOKind>O</SBOKind>\r\n        <SBOCount>{Array.from({ length: currO }).map(() => \"🔴\")}</SBOCount>\r\n      </SBOItem>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SBO;\r\n\r\nconst SBOItem = styled.li`\r\n  display: flex;\r\n  & div {\r\n    height: 20px;\r\n  }\r\n`;\r\n\r\nconst SBOKind = styled.div`\r\n  width: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nconst SBOCount = styled.div`\r\n  width: 80px;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../App\";\r\n\r\nconst CurrentPlayer = ({ playerRole }) => {\r\n  const { globalState } = useContext(GlobalContext);\r\n  const { currHitter, currPitcher } = globalState;\r\n\r\n  return (\r\n    <div>\r\n      <div>{playerRole}</div>\r\n      <div>\r\n        <span>{playerRole === \"투수\" ? currPitcher.name : currHitter.name}</span>\r\n        <span>\r\n          {playerRole === \"투수\"\r\n            ? `#${currPitcher.pitchCount}`\r\n            : `${currHitter.plateAppearances}타석 ${currHitter.hits}안타`}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentPlayer;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../App\";\r\nimport { isEqual, scoreParser } from \"../../utils/util\";\r\n\r\nconst DetailScorePopup = ({ popupState }) => {\r\n  const { globalState } = useContext(GlobalContext);\r\n  const { currAttackTeam, expeditionTeam } = globalState;\r\n  if (popupState.length === 0) return <></>;\r\n\r\n  const tableHead = [\"\", \"\", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, \"R\"];\r\n  const [expedition, home] = scoreParser(popupState);\r\n  isEqual(currAttackTeam, expeditionTeam) ? (expedition[0] = \"⚾️\") : (home[0] = \"⚾️\");\r\n\r\n  return (\r\n    <ScorePopup>\r\n      <ScoreTable>\r\n        {tableHead.map((e, i) => (\r\n          <InningNumber border={i >= 2}>{e}</InningNumber>\r\n        ))}\r\n        {expedition.map((e, i) => (\r\n          <Score color={i === expedition.length - 1 && \"red\"} weight={i >= 2} align={i === 0}>\r\n            {e}\r\n          </Score>\r\n        ))}\r\n        {home.map((e, i) => (\r\n          <Score color={i === expedition.length - 1 && \"red\"} weight={i >= 2} align={i === 0}>\r\n            {e}\r\n          </Score>\r\n        ))}\r\n      </ScoreTable>\r\n    </ScorePopup>\r\n  );\r\n};\r\n\r\nexport default DetailScorePopup;\r\n\r\nconst ScorePopup = styled.div`\r\n  width: 1000px;\r\n  height: 170px;\r\n  padding: 25px 60px;\r\n  box-sizing: border-box;\r\n  border: 3px solid white;\r\n`;\r\n\r\nconst ScoreTable = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr repeat(13, 1fr);\r\n  /* gap: 5px; */\r\n`;\r\n\r\nconst InningNumber = styled.div`\r\n  color: #fff;\r\n  /* outline: 1px solid gold; */\r\n  text-align: center;\r\n\r\n  font-size: 1.6rem;\r\n  font-weight: 900;\r\n  border-bottom: ${({ border }) => border && \"3px solid #fff\"};\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst Score = styled.div`\r\n  color: ${({ color }) => color || \"#fff\"};\r\n  text-align: ${({ align }) => (align ? \"right\" : \"center\")};\r\n  font-size: 1.6rem;\r\n  font-weight: ${({ weight }) => (weight ? \"900\" : \"600\")};\r\n  padding-top: 15px;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../App\";\r\nimport { actionType } from \"../../utils/util\";\r\n\r\n// history: currTeamLog에 있는 지난 선수들 기록\r\nconst PlayerHistory = ({ flag, history }) => {\r\n  const { globalState } = useContext(GlobalContext);\r\n  const { currHitter } = globalState;\r\n\r\n  // let currHitterLocal = null;\r\n  // const currHitterInfo = localStorage.getItem(\"currHitter\");\r\n  // if (currHitterInfo) currHitterLocal = currHitterInfo.currHitter;\r\n\r\n  return (\r\n    <PlayerHistoryContainer>\r\n      {flag === \"currPlayer\" ? (\r\n        <CurrPlayer>\r\n          <div>\r\n            {currHitter.playerBattingOrder}번 타자 {currHitter.name}\r\n          </div>\r\n          <PlayerLog>\r\n            {currHitter.historyList.length > 0 &&\r\n              [...currHitter.historyList].map((historyLog, i) => {\r\n                return (\r\n                  <li>\r\n                    <span>{i + 1}</span>\r\n                    <span>{actionType[historyLog.actionName]}</span>\r\n                    <span>\r\n                      S{historyLog.strike} B{historyLog.ball}\r\n                    </span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </PlayerLog>\r\n        </CurrPlayer>\r\n      ) : (\r\n        <PastPlayers>\r\n          <div>\r\n            {history.playerBattingOrder}번 타자 {history.playerName}\r\n          </div>\r\n          <div>{history.lastAction}</div>\r\n          <PlayerLog>\r\n            {history.historyList.length > 0 &&\r\n              [...history.historyList].map((historyLog, i) => {\r\n                return (\r\n                  <li>\r\n                    <span>{i + 1}</span>\r\n                    <span>{actionType[historyLog.actionName]}</span>\r\n                    <span>\r\n                      S{historyLog.strike} B{historyLog.ball}\r\n                    </span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </PlayerLog>\r\n        </PastPlayers>\r\n      )}\r\n      {/* pastPlayer, currPlayer를 공통된 컴포넌트로 만들 수 있을듯 */}\r\n    </PlayerHistoryContainer>\r\n  );\r\n};\r\n\r\nexport default PlayerHistory;\r\n\r\nconst PlayerHistoryContainer = styled.div``;\r\n\r\nconst PlayerLog = styled.ul`\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n`;\r\n\r\nconst CurrPlayer = styled.div`\r\n  border: 1px solid blue;\r\n`;\r\nconst PastPlayers = styled.div`\r\n  border: 1px solid red;\r\n`;\r\n","import React from \"react\";\r\n\r\nconst PlayerListPopup = (props) => {\r\n  return <div>선수 명단 팝업</div>;\r\n};\r\n\r\nexport default PlayerListPopup;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TeamScore = ({ isMyTeam, isHome, team }) => {\r\n  return (\r\n    <TeamScoreContainer isHome={isHome}>\r\n      <p>{team.totalScore}</p>\r\n      <div>\r\n        <p>{team.name}</p>\r\n        {isMyTeam && <p>myteam</p>}\r\n      </div>\r\n    </TeamScoreContainer>\r\n  );\r\n};\r\n\r\nexport default TeamScore;\r\n\r\nconst TeamScoreContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: ${({ isHome }) => !isHome && \"row-reverse\"};\r\n`;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../App\";\r\nimport Title from \"../shared/Title\";\r\nimport CurrentInningInfo from \"./baseballField/CurrentInningInfo\";\r\nimport Diamond from \"./baseballField/Diamond\";\r\n// import PitchButton from \"./baseballField/PitchButton\";\r\nimport SBO from \"./baseballField/SBO\";\r\nimport CurrentPlayer from \"./CurrentPlayer\";\r\nimport DetailScorePopup from \"./DetailScorePopup\";\r\nimport PlayerHistory from \"./PlayerHistory\";\r\nimport PlayerListPopup from \"./PlayerListPopup\";\r\nimport TeamScore from \"./TeamScore\";\r\nimport { getURL } from \"../../utils/util\";\r\n\r\nconst Game = () => {\r\n  const { globalState } = useContext(GlobalContext);\r\n  const { myTeam, homeTeam, expeditionTeam, currInning, currTeamLog, isResponseDone } = globalState;\r\n  const [popupState, setPopupState] = useState([]);\r\n  // 이닝 점수판 이벤트핸들러\r\n  const handleMouseEnterOnPopup = async ({ target }, isTop) => {\r\n    const matchId = localStorage.getItem(\"matchId\");\r\n    const urlName = getURL(`/${matchId}/record/${isTop ? \"teams\" : \"players\"}`);\r\n    const translateValue = `translateY(${isTop ? 880 : -880}px)`;\r\n\r\n    const response = await fetch(urlName);\r\n    const popupData = await response.json();\r\n    setPopupState(popupData);\r\n\r\n    target.style.transform = translateValue;\r\n    target.style.background = `rgba(0, 0, 0, 0.9)`;\r\n  };\r\n\r\n  const handleClickOutOfPopup = () => {};\r\n\r\n  return (\r\n    <>\r\n      {!isResponseDone ? (\r\n        <div>Loading</div>\r\n      ) : (\r\n        <>\r\n          <GameContainer>\r\n            <GameProgress>\r\n              {/* style-component*/}\r\n              <MainScoreBoard>\r\n                {/* style-component*/}\r\n                <Title />\r\n                <ScoreBox>\r\n                  <TeamScore isMyTeam={myTeam.name === expeditionTeam.name} isHome={false} team={expeditionTeam} />\r\n                  <span>VS</span>\r\n                  <TeamScore isMyTeam={myTeam.name === homeTeam.name} isHome team={homeTeam} />\r\n                </ScoreBox>\r\n              </MainScoreBoard>\r\n              <BaseballField>\r\n                {/* style-component*/}\r\n                <SBO />\r\n                <Diamond />\r\n                {/* </Diamond> */}\r\n                <CurrentInningInfo inning={currInning} />\r\n              </BaseballField>\r\n            </GameProgress>\r\n\r\n            <PlayerProgress>\r\n              {/* style-component*/}\r\n              <CurrentPlayerContainer>\r\n                {/* style-component*/}\r\n                <CurrentPlayer playerRole=\"투수\" />\r\n                <CurrentPlayer playerRole=\"타자\" />\r\n              </CurrentPlayerContainer>\r\n              <PlayerHistoryContainer>\r\n                {/* style-component*/}\r\n                <PlayerHistory flag=\"currPlayer\" />\r\n                {currTeamLog.length > 0 &&\r\n                  [...currTeamLog]\r\n                    .reverse()\r\n                    .map((playerLog) => <PlayerHistory flag=\"pastPlayer\" history={playerLog} />)}\r\n              </PlayerHistoryContainer>\r\n            </PlayerProgress>\r\n            <TopPopupArea onMouseEnter={(e) => handleMouseEnterOnPopup(e, true)}>\r\n              <DetailScorePopup popupState={popupState} />\r\n            </TopPopupArea>\r\n            <BottomPopupArea>\r\n              <PlayerListPopup />\r\n            </BottomPopupArea>\r\n          </GameContainer>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n\r\nconst GameContainer = styled.section`\r\n  display: flex;\r\n  width: 1200px;\r\n  height: 900px;\r\n  border: 1px solid red;\r\n  & div {\r\n    /* border: 1px solid black; */\r\n  }\r\n  position: relative;\r\n`;\r\n\r\nconst GameProgress = styled.div`\r\n  display: flex;\r\n  width: 80%;\r\n  flex-direction: column;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst ScoreBox = styled.div`\r\n  display: flex;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst MainScoreBoard = styled.div`\r\n  height: 200px;\r\n  border: 1px solid black;\r\n  // width: 80%;\r\n`;\r\nconst BaseballField = styled.div`\r\n  // width: 80%;\r\n  height: 700px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst PlayerProgress = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 20%;\r\n  border: 1px solid black;\r\n`;\r\nconst CurrentPlayerContainer = styled.div`\r\n  height: 200px;\r\n  // width: 20%;\r\n  border: 1px solid black;\r\n`;\r\nconst PlayerHistoryContainer = styled.div`\r\n  // width: 20%;\r\n  height: 700px;\r\n  border: 1px solid black;\r\n`;\r\nconst TopPopupArea = styled.section`\r\n  width: 1200px;\r\n  height: 900px;\r\n  padding-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n  top: -880px;\r\n  transition: 500ms;\r\n  // top: 0;\r\n`;\r\nconst BottomPopupArea = styled.section`\r\n  border: 1px solid blue;\r\n  width: 1200px;\r\n  height: 500px;\r\n  position: absolute;\r\n  bottom: -450px;\r\n`;\r\n","const initialValue = {\r\n  myTeam: null,\r\n  counterTeam: null,\r\n  homeTeam: null,\r\n  expeditionTeam: null,\r\n  currInning: null,\r\n  currPitcher: null,\r\n  currHitter: null,\r\n  currTeamLog: null,\r\n  currS: 0,\r\n  currB: 0,\r\n  currH: 0,\r\n  currO: 0,\r\n  isResponseDone: false,\r\n  currAttackTeam: null,\r\n  diamondQueue: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"myTeam\":\r\n      return { ...state, myTeam: { id: action.id, name: action.name } };\r\n    case \"counterTeam\":\r\n      return { ...state, counterTeam: { id: action.id, name: action.name } };\r\n    case \"homeTeam\":\r\n      return { ...state, homeTeam: action.team };\r\n    case \"expeditionTeam\":\r\n      return { ...state, expeditionTeam: action.team };\r\n    case \"currInning\":\r\n      return { ...state, currInning: action.currInning };\r\n    case \"currPitcher\":\r\n      return {\r\n        ...state,\r\n        currPitcher: {\r\n          role: action.role,\r\n          name: action.name,\r\n          pitchCount: action.pitchCount,\r\n        },\r\n      };\r\n    case \"currHitter\":\r\n      return {\r\n        ...state,\r\n        currHitter: {\r\n          role: action.role,\r\n          playerBattingOrder: action.playerBattingOrder,\r\n          teamId: action.teamId,\r\n          historyList: action.historyList,\r\n          name: action.name,\r\n          plateAppearances: action.plateAppearances,\r\n          hits: action.hits,\r\n          lastAction: action.lastAction,\r\n        },\r\n      };\r\n    case \"currTeamLog\":\r\n      return { ...state, currTeamLog: action.currTeamLog };\r\n    case \"currS\":\r\n      return { ...state, currS: action.init ? 0 : state.currS + action.payload };\r\n    case \"currB\":\r\n      return { ...state, currB: action.init ? 0 : state.currB + action.payload };\r\n    case \"currH\":\r\n      return { ...state, currH: action.init ? 0 : state.currH + action.payload };\r\n    case \"currO\":\r\n      return { ...state, currO: action.init ? 0 : state.currO + action.payload };\r\n    case \"isResponseDone\":\r\n      return { ...state, isResponseDone: true };\r\n    case \"currAttackTeam\":\r\n      return { ...state, currAttackTeam: action.team };\r\n    case \"diamondQueue\":\r\n      return { ...state, diamondQueue: action.diamondQueue };\r\n  }\r\n}\r\n\r\nexport { initialValue, reducer };\r\n","import React, { useReducer, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"./reset.css\";\r\nimport Main from \"./components/main/Main\";\r\nimport Game from \"./components/game/Game\";\r\nimport { initialValue, reducer } from \"./utils/reducer\";\r\n\r\nexport const GlobalContext = React.createContext();\r\n\r\nfunction App() {\r\n  const [globalState, dispatch] = useReducer(reducer, initialValue);\r\n\r\n  const baseballState = {\r\n    teamInfo: {\r\n      globalState,\r\n      dispatch,\r\n    },\r\n  };\r\n  return (\r\n    <GlobalContext.Provider value={baseballState.teamInfo}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Main />\r\n          </Route>\r\n          <Route path=\"/baseballGame\">\r\n            <Game />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}